{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage.js/Sections/ProductImage.js","components/views/DetailProductPage.js/Sections/ProductInfo.js","components/views/DetailProductPage.js/DetailProduct.js","components/views/CartPage/Sections/UserCardBlock.js","components/utils/Paypal.js","components/views/CartPage/CartPage.js","components/views/HistoryPage/HistoryPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","images","host","location","origin","autoplay","map","image","index","key","style","width","height","src","alt","Panel","Collapse","CheckBox","list","handleFielters","useState","checked","setChecked","defaultActiveKey","header","value","onChange","currentIndex","indexOf","newChecked","splice","handleToggle","_id","name","RadioBox","setValue","Group","e","target","Search","Input","SearchFeature","refreshFunction","searchTerm","setSearchTerm","placeholder","currentTarget","continents","price","LandingPage","getProduct","skip","limit","products","setProducts","setSkip","postSize","setPostSize","filters","setFilters","body","post","success","loadMore","productInfo","alert","paramFilters","category","newFilters","priceValues","handlePrice","showFilteredResults","array","parseInt","renderCards","product","lg","md","xs","cover","href","title","description","margin","textAlign","gutter","display","justifyContent","newSearchTerm","marginTop","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","level","Item","prefix","color","onBlur","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","userData","paddingBottom","count","cart","length","marginRight","cikir","marginBottom","status","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","FileUpload","setImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","overflow","newImages","deleteHandler","TextArea","UploadProductPage","setTitle","setDescription","setPrice","continet","setContinent","maxWidth","item","preventDefault","writer","continets","ProductImage","detail","original","thumbnail","sizes","items","s","ProductInfo","bordered","sold","view","size","productId","addToCart","DetailProduct","match","params","setProduct","UserCardBlock","renderCartImage","quantity","Paypal","finish","total","this","env","client","sandbox","production","currency","onError","console","log","onSuccess","payment","onSucess","setState","onCancel","React","Component","CartPage","setTotal","showTotal","setShowTotal","showSuccess","setShowSuccess","cartItems","forEach","userCart","cartItem","prodcutDetail","getCartItems","calculateTotal","cartDetail","removeCartItem","onSuccessBuy","paymentData","HistoryPage","dayjs","dateOfPurchase","format","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wkEAiCO,SAASA,IAIZ,MAAO,CACHC,KCpCiB,YDqCjBC,QALYC,IAAMC,IAAN,UEjCO,aFiCP,UACXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,YG9BpB,WAAUC,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KAC7D,SAASC,EAAoBC,GAEzB,IAAIC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAAWC,cA2BjB,OAzBAC,qBAAU,WAENF,EAAShB,KAAQK,MAAK,SAAAC,GAEbA,EAASJ,QAAQiB,QAOdT,IAAeJ,EAASJ,QAAQkB,UAKjB,IAAXX,IAJJG,EAAMS,QAAQC,KAAK,KAPnBb,GACAG,EAAMS,QAAQC,KAAK,eAiBhC,IAGC,kBAACd,EAAD,iBAAuBI,EAAvB,CAA8BC,KAAMA,KAG5C,OAAOF,G,iGCbIY,MArBf,YAAkC,IAAXC,EAAU,EAAVA,OACbC,EAA2B,0BAApBC,SAASC,OAAqC,wBAA0BD,SAASC,OAE9F,OACI,6BACI,kBAAC,IAAD,CAAUC,UAAQ,GACbJ,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACR,yBAAMC,IAAKD,GACP,yBACIE,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,IAAG,UAAKX,EAAL,YAAaK,GAChBO,IAAKP,W,oBCdzBQ,EAAUC,IAAVD,MAuCOE,MArCf,YAA6C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eACtB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAyBA,OACI,6BACI,kBAAC,IAAD,CAAUC,iBAAkB,CAAC,MACzB,kBAACR,EAAD,CAAOS,OAAO,aAAaf,IAAI,KAbTS,GAAQA,EAAKZ,KAAI,SAACmB,EAAOjB,GAAR,OAC/C,kBAAC,IAAD,CACIkB,SAAU,kBAfG,SAAAD,GACjB,IAAME,EAAeN,EAAQO,QAAQH,GAC/BI,EAAU,YAAOR,IAED,IAAlBM,EACAE,EAAW9B,KAAK0B,GAEhBI,EAAWC,OAAOH,EAAc,GAEpCL,EAAWO,GACXV,EAAeU,GAKKE,CAAaN,EAAMO,MACnCX,SAAyC,IAAhCA,EAAQO,QAAQH,EAAMO,KAC/BvB,IAAKD,GAEL,8BAAOiB,EAAMQ,c,UCxBjBlB,EAAUC,IAAVD,MA6BOmB,MA3Bf,YAA6C,IAAzBhB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eACtB,EAA0BC,mBAAS,GAAnC,mBAAOK,EAAP,KAAcU,EAAd,KAaA,OACI,6BACI,kBAAC,IAAD,CAAUZ,iBAAkB,CAAC,MACzB,kBAAC,EAAD,CAAOC,OAAO,QAAQf,IAAI,KACtB,kBAAC,IAAM2B,MAAP,CAAaV,SATR,SAAAW,GACjBF,EAASE,EAAEC,OAAOb,OAClBN,EAAekB,EAAEC,OAAOb,QAOyBA,MAAOA,GAf1BP,GAAQA,EAAKZ,KAAI,SAAAmB,GAAK,OACpD,kBAAC,IAAD,CAAOA,MAAOA,EAAMO,IAAKvB,IAAKgB,EAAMO,KAChC,8BAAOP,EAAMQ,e,UCPjBM,EAAWC,IAAXD,OAsBOE,MApBf,YAA6C,IAApBC,EAAmB,EAAnBA,gBACrB,EAAoCtB,mBAAS,IAA7C,mBAAOuB,EAAP,KAAmBC,EAAnB,KAOA,OACI,6BACI,kBAACL,EAAD,CACIM,YAAY,oBACZnB,SATU,SAAAW,GAClBO,EAAcP,EAAES,cAAcrB,OAC9BiB,EAAgBL,EAAES,cAAcrB,QAQxBf,MAAO,CAAEC,MAAO,KAChBc,MAAOkB,MCnBjBI,EAAa,CACf,CACI,IAAO,EACP,KAAQ,UAEZ,CACI,IAAO,EACP,KAAQ,UAEZ,CACI,IAAO,EACP,KAAQ,QAEZ,CACI,IAAO,EACP,KAAQ,iBAEZ,CACI,IAAO,EACP,KAAQ,iBAEZ,CACI,IAAO,EACP,KAAQ,YAIVC,EAAQ,CACV,CACI,IAAO,EACP,KAAQ,MACR,MAAS,IAEb,CACI,IAAO,EACP,KAAQ,aACR,MAAS,CAAC,EAAG,MAEjB,CACI,IAAO,EACP,KAAQ,eACR,MAAS,CAAC,IAAK,MAEnB,CACI,IAAO,EACP,KAAQ,eACR,MAAS,CAAC,IAAK,MAEnB,CACI,IAAO,EACP,KAAQ,eACR,MAAS,CAAC,IAAK,MAEnB,CACI,IAAO,EACP,KAAQ,iBACR,MAAS,CAAC,IAAK,QC+HRC,MA7Kf,WACItD,qBAAU,WAKNuD,EAJW,CACPC,OACAC,YAGL,IAIH,MAAgChC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAwBlC,mBAAS,GAAjC,mBAAO+B,EAAP,KAAaI,EAAb,KACA,EAA0BnC,mBAAS,GAAnC,mBAAOgC,EAAP,KACA,GADA,KACgChC,mBAAS,IAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KACA,EAA8BrC,mBAAS,CACnC2B,WAAY,GACZC,MAAO,KAFX,mBAAOU,EAAP,KAAgBC,EAAhB,KAIA,EAAoCvC,mBAAS,IAA7C,mBAAmBwB,GAAnB,WAKMM,EAAa,SAAAU,GACfhF,IAAMiF,KAAK,wBAAyBD,GAC/B9E,MAAK,SAAAC,GACEA,EAASC,KAAK8E,SACVF,EAAKG,SACLT,EAAY,GAAD,mBAAKD,GAAL,YAAkBtE,EAASC,KAAKgF,eAE3CV,EAAYvE,EAASC,KAAKgF,aAE9BP,EAAY1E,EAASC,KAAKwE,WAE1BS,MAAM,sGAkBhB9C,EAAiB,SAAC+C,EAAcC,GAClC,IAAMC,EAAU,eAAQV,GAGxB,GAFAU,EAAWD,GAAYD,EAEN,UAAbC,EAAsB,CACtB,IAAIE,EAAcC,EAAYJ,GAC9BE,EAAWD,GAAYE,EAG3BE,EAAoBH,GACpBT,EAAWS,IAGTG,EAAsB,SAAAb,GAMxBR,EALW,CACPC,KAAM,EACNC,QACAM,YAGJH,EAAQ,IAGNe,EAAc,SAAA7C,GAChB,IAAMzC,EAAOgE,EACTwB,EAAQ,GAEZ,IAAK,IAAI/D,KAAOzB,EACRA,EAAKyB,GAAKuB,MAAQyC,SAAShD,EAAO,MAClC+C,EAAQxF,EAAKyB,GAAK+D,OAG1B,OAAOA,GAqBLE,EAAcrB,EAAS/C,KAAI,SAACqE,EAASnE,GACvC,OACI,kBAAC,IAAD,CAAKoE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIrE,IAAKD,GAC5B,kBAAC,IAAD,CACIuE,MACI,uBAAGC,KAAI,mBAAcL,EAAQ3C,MACzB,kBAAC,EAAD,CAAa/B,OAAQ0E,EAAQ1E,WAIrC,kBAAC,IAAD,CACIgF,MAAON,EAAQM,MACfC,YAAW,WAAMP,EAAQ3B,cAS7C,OACI,yBAAKtC,MAAO,CAAEC,MAAO,MAAOwE,OAAQ,cAChC,yBAAKzE,MAAO,CAAE0E,UAAW,WACrB,qDAA0B,kBAAC,IAAD,CAAM1G,KAAK,aAKzC,kBAAC,IAAD,CAAK2G,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKT,GAAI,GAAIE,GAAI,IACb,kBAAC,EAAD,CACI5D,KAAM6B,EACN5B,eAAgB,SAAAuC,GAAO,OAAIvC,EAAeuC,EAAS,kBAG3D,kBAAC,IAAD,CAAKkB,GAAI,GAAIE,GAAI,IACb,kBAAC,EAAD,CACI5D,KAAM8B,EACN7B,eAAgB,SAAAuC,GAAO,OAAIvC,EAAeuC,EAAS,cAO/D,yBAAKhD,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,WAAYJ,OAAQ,WAC/D,kBAAC,EAAD,CAAezC,gBA/DF,SAAA8C,GACrB,IAAI5B,EAAO,CACPT,KAAM,EACNC,QACAM,UACAf,WAAY6C,GAGhB5C,EAAc4C,GACdtC,EAAWU,GACXL,EAAQ,OA0DJ,kBAAC,IAAD,CAAK8B,OAAQ,CAAC,GAAI,KACbX,GAKJlB,GAAYJ,GACT,yBAAK1C,MAAO,CAAEC,MAAO,OAAQ2E,QAAS,OAAQC,eAAgB,SAAUE,UAAW,SAC/E,kBAAC,IAAD,CAAQC,QA9HA,WAMpBxC,EALW,CACPC,KAAMA,EAAOC,EACbA,QACAW,UAAU,IAGdR,EAAQJ,KAuHI,yB,qCCxKZwC,EAAUC,IAAVD,MAwIOE,mBAtIf,SAAmBxG,GACjB,IAAMI,EAAWC,cACXoG,IAAoBC,aAAaC,QAAQ,cAE/C,EAAgD5E,mBAAS,IAAzD,mBAAO6E,EAAP,KAAyBC,EAAzB,KACA,EAAoC9E,mBAAS0E,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,WACvBD,GAAeD,IAGXG,EAAeP,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GAE/F,OACE,kBAAC,IAAD,CACEO,cAAe,CACbC,MAAOF,EACPG,SAAU,IAEZC,iBAAkBC,WAAaC,MAAM,CACnCJ,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnBhH,EVrBH,SAAmB0H,GAItB,MAAO,CACHzI,KC5BkB,aD6BlBC,QALYC,IAAMiF,KAAN,UEvBO,aFuBP,UAAmCsD,GAC9CrI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SUmBhBoI,CAAUD,IAChBrI,MAAK,SAAAC,GACAA,EAASJ,QAAQ0I,cACnBC,OAAOvB,aAAawB,QAAQ,SAAUxI,EAASJ,QAAQ6I,SACpC,IAAfrB,EACFmB,OAAOvB,aAAawB,QAAQ,aAAcP,EAAOS,IAEjD1B,aAAa2B,WAAW,cAE1BrI,EAAMS,QAAQC,KAAK,MAEnBmG,EAAoB,+CAGvByB,OAAM,SAAAC,GACL1B,EAAoB,4CACpBgB,YAAW,WACThB,EAAoB,MACnB,QAEPe,GAAc,KACb,QAGJ,SAAA5H,GACC,IACE2H,EAOE3H,EAPF2H,OACAa,EAMExI,EANFwI,QACAC,EAKEzI,EALFyI,OACAC,EAIE1I,EAJF0I,aACAC,EAGE3I,EAHF2I,aACAC,EAEE5I,EAFF4I,WACAC,EACE7I,EADF6I,aAEF,OACE,yBAAKC,UAAU,OAEb,kBAACxC,EAAD,CAAOyC,MAAO,GAAd,UACA,0BAAMrB,SAAUmB,EAAcxH,MAAO,CAAEC,MAAO,UAE5C,kBAAC,IAAK0H,KAAN,CAAWxB,UAAQ,GACjB,kBAAC,IAAD,CACEY,GAAG,QACHa,OAAQ,kBAAC,IAAD,CAAM5J,KAAK,OAAOgC,MAAO,CAAE6H,MAAO,qBAC1C1F,YAAY,mBACZnE,KAAK,QACL+C,MAAOuF,EAAOR,MACd9E,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK2B,UAAU,kBAAkBL,EAAOtB,QAI5C,kBAAC,IAAK6B,KAAN,CAAWxB,UAAQ,GACjB,kBAAC,IAAD,CACEY,GAAG,WACHa,OAAQ,kBAAC,IAAD,CAAM5J,KAAK,OAAOgC,MAAO,CAAE6H,MAAO,qBAC1C1F,YAAY,sBACZnE,KAAK,WACL+C,MAAOuF,EAAOP,SACd/E,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK0B,UAAU,kBAAkBL,EAAOrB,WAI3CR,GACC,+BAAQ,uBAAGvF,MAAO,CAAE6H,MAAO,YAAaE,SAAU,SAAUC,OAAQ,YAAaC,QAAS,OAAQC,aAAc,SAAW3C,IAG7H,kBAAC,IAAKoC,KAAN,KACE,kBAAC,IAAD,CAAUZ,GAAG,aAAa/F,SAAU2E,EAAkBhF,QAAS8E,GAA/D,eACA,uBAAGgC,UAAU,oBAAoBnD,KAAK,cAActE,MAAO,CAAEmI,MAAO,UAApE,mBAGA,6BACE,kBAAC,IAAD,CAAQnK,KAAK,UAAUoK,SAAS,SAASX,UAAU,oBAAoBzH,MAAO,CAAEqI,SAAU,QAAUC,SAAUjB,EAAchB,SAAUmB,GAAtI,WANJ,MAUK,uBAAGlD,KAAK,aAAR,0B,kBCzHbiE,EAAiB,CACrBC,SAAU,CACRpE,GAAI,CAAEqE,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVvE,GAAI,CAAEqE,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVvE,GAAI,CACFqE,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KAyKCC,MApKf,SAAsBnK,GACpB,IAAMI,EAAWC,cACjB,OAEE,kBAAC,IAAD,CACE6G,cAAe,CACbC,MAAO,GACPiD,SAAU,GACVxH,KAAM,GACNwE,SAAU,GACViD,gBAAiB,IAEnBhD,iBAAkBC,WAAaC,MAAM,CACnC3E,KAAM0E,WACHE,SAAS,oBACZ4C,SAAU9C,WACPE,SAAS,yBACZL,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,wBACZ6C,gBAAiB/C,WACdgD,MAAM,CAAChD,MAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WAET,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjBxE,KAAM+E,EAAO/E,KACb2H,SAAU5C,EAAO4C,SACjBrJ,MAAM,8BAAD,OAAgCsJ,MAASC,OAAzC,iBAGPrK,EX7DH,SAAsB0H,GAIzB,MAAO,CACHzI,KCjBqB,gBDkBrBC,QALYC,IAAMiF,KAAN,UEbO,aFaP,aAAsCsD,GACjDrI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SW2DhB+K,CAAa5C,IAAerI,MAAK,SAAAC,GACpCA,EAASJ,QAAQmF,QACnBzE,EAAMS,QAAQC,KAAK,UAEnBkE,MAAMlF,EAASJ,QAAQiJ,IAAIoC,WAI/B/C,GAAc,KACb,QAGJ,SAAA5H,GACC,IACE2H,EAOE3H,EAPF2H,OACAa,EAMExI,EANFwI,QACAC,EAKEzI,EALFyI,OACAC,EAIE1I,EAJF0I,aACAC,EAGE3I,EAHF2I,aACAC,EAEE5I,EAFF4I,WACAC,EACE7I,EADF6I,aAEF,OACE,yBAAKC,UAAU,OACb,uCACA,kBAAC,IAAD,eAAMzH,MAAO,CAAEqI,SAAU,UAAeE,EAAxC,CAAwDlC,SAAUmB,IAEhE,kBAAC,IAAKG,KAAN,CAAWxB,UAAQ,EAACoD,MAAM,QACxB,kBAAC,IAAD,CACExC,GAAG,OACH5E,YAAY,kBACZnE,KAAK,OACL+C,MAAOuF,EAAO/E,KACdP,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAO7F,MAAQ4F,EAAQ5F,KAAO,mBAAqB,eAGtD6F,EAAO7F,MAAQ4F,EAAQ5F,MACtB,yBAAKkG,UAAU,kBAAkBL,EAAO7F,OAI5C,kBAAC,IAAKoG,KAAN,CAAWxB,UAAQ,EAACoD,MAAM,aACxB,kBAAC,IAAD,CACExC,GAAG,WACH5E,YAAY,uBACZnE,KAAK,OACL+C,MAAOuF,EAAOyC,SACd/H,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAO2B,UAAY5B,EAAQ4B,SAAW,mBAAqB,eAG9D3B,EAAO2B,UAAY5B,EAAQ4B,UAC1B,yBAAKtB,UAAU,kBAAkBL,EAAO2B,WAI5C,kBAAC,IAAKpB,KAAN,CAAWxB,UAAQ,EAACoD,MAAM,QAAQC,aAAW,EAACC,eAAgBrC,EAAOtB,OAASqB,EAAQrB,MAAQ,QAAU,WACtG,kBAAC,IAAD,CACEiB,GAAG,QACH5E,YAAY,mBACZnE,KAAK,QACL+C,MAAOuF,EAAOR,MACd9E,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK2B,UAAU,kBAAkBL,EAAOtB,QAI5C,kBAAC,IAAK6B,KAAN,CAAWxB,UAAQ,EAACoD,MAAM,WAAWC,aAAW,EAACC,eAAgBrC,EAAOrB,UAAYoB,EAAQpB,SAAW,QAAU,WAC/G,kBAAC,IAAD,CACEgB,GAAG,WACH5E,YAAY,sBACZnE,KAAK,WACL+C,MAAOuF,EAAOP,SACd/E,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK0B,UAAU,kBAAkBL,EAAOrB,WAI5C,kBAAC,IAAK4B,KAAN,CAAWxB,UAAQ,EAACoD,MAAM,UAAUC,aAAW,GAC7C,kBAAC,IAAD,CACEzC,GAAG,kBACH5E,YAAY,6BACZnE,KAAK,WACL+C,MAAOuF,EAAO0C,gBACdhI,SAAUsG,EACVQ,OAAQP,EACRE,UACEL,EAAO4B,iBAAmB7B,EAAQ6B,gBAAkB,mBAAqB,eAG5E5B,EAAO4B,iBAAmB7B,EAAQ6B,iBACjC,yBAAKvB,UAAU,kBAAkBL,EAAO4B,kBAI5C,kBAAC,IAAKrB,KAASiB,EACb,kBAAC,IAAD,CAAQ5D,QAASwC,EAAcxJ,KAAK,UAAUsK,SAAUjB,GAAxD,iB,UCzLVqC,EAAUC,IAAKD,QACfE,EAAgBD,IAAKE,UAsBZC,MApBf,SAAkBnL,GAChB,OACE,kBAAC,IAAD,CAAMoL,KAAMpL,EAAMoL,MAClB,kBAAC,IAAKpC,KAAN,CAAW5H,IAAI,QACb,uBAAGuE,KAAK,KAAR,SAEF,kBAACoF,EAAD,CAASnF,MAAO,wCACd,kBAACqF,EAAD,CAAerF,MAAM,UACnB,kBAAC,IAAKoD,KAAN,CAAW5H,IAAI,aAAf,YACA,kBAAC,IAAK4H,KAAN,CAAW5H,IAAI,aAAf,aAEF,kBAAC6J,EAAD,CAAerF,MAAM,UACnB,kBAAC,IAAKoD,KAAN,CAAW5H,IAAI,aAAf,YACA,kBAAC,IAAK4H,KAAN,CAAW5H,IAAI,aAAf,gB,UCsCOoF,oBAhDf,SAAmBxG,GACjB,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAYxC,OAAIA,EAAKoL,WAAapL,EAAKoL,SAAS9K,OAEhC,kBAAC,IAAD,CAAM6K,KAAMpL,EAAMoL,MAChB,kBAAC,IAAKpC,KAAN,CAAW5H,IAAI,QACb,uBAAGuE,KAAK,UAAR,WAEF,kBAAC,IAAKqD,KAAN,CAAW5H,IAAI,OACb,uBAAGuE,KAAK,aAAR,YAMJ,kBAAC,IAAD,CAAMyF,KAAMpL,EAAMoL,MAChB,kBAAC,IAAKpC,KAAN,CAAW5H,IAAI,WACb,uBAAGuE,KAAK,YAAR,YAEF,kBAAC,IAAKqD,KAAN,CAAW5H,IAAI,UACb,uBAAGuE,KAAK,mBAAR,WAEF,kBAAC,IAAKqD,KAAN,CAAW5H,IAAI,OAAOC,MAAO,CAAEiK,cAAe,IAC5C,kBAAC,IAAD,CAAOC,MAAOtL,EAAKoL,UAAYpL,EAAKoL,SAASG,KAAKC,QAChD,uBAAG9F,KAAK,aAAatE,MAAO,CAAEqK,aAAc,GAAIC,MAAO,YACrD,kBAAC,IAAD,CAAMtM,KAAK,gBAAgBgC,MAAO,CAAE+H,SAAU,GAAIwC,aAAc,QAItE,kBAAC,IAAK5C,KAAN,CAAW5H,IAAI,UACb,uBAAGiF,QAtCW,WACpB9G,IAAMC,IAAN,UXXuB,aWWvB,YAAmCC,MAAK,SAAAC,GACd,MAApBA,EAASmM,OACX7L,EAAMS,QAAQC,KAAK,UAEnBkE,MAAM,uBAiCJ,e,mBCGKkH,OA9Cf,WACE,MAA8B/J,oBAAS,GAAvC,mBAAOgK,EAAP,KAAgBC,EAAhB,KAUA,OACE,yBAAKlD,UAAU,OAAOzH,MAAO,CAAE4K,SAAU,QAASC,OAAQ,EAAG5K,MAAO,SAClE,yBAAKwH,UAAU,cACb,uBAAGnD,KAAK,KAAR,SAEF,yBAAKmD,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAUsC,KAAK,gBAEjB,yBAAKtC,UAAU,cACb,kBAAC,GAAD,CAAWsC,KAAK,gBAElB,kBAAC,IAAD,CACEtC,UAAU,sBACVzJ,KAAK,UACLgH,QAvBW,WACjB2F,GAAW,KAwBL,kBAAC,IAAD,CAAM3M,KAAK,iBAEb,kBAAC,KAAD,CACEuG,MAAM,eACNuG,UAAU,QACVrD,UAAU,cACVsD,UAAU,EACVC,QA5BQ,WACdL,GAAW,IA4BLD,QAASA,GAET,kBAAC,EAAD,CAAUX,KAAK,WACf,kBAAC,GAAD,CAAWA,KAAK,eC9BXkB,OAZf,WACI,OACI,yBAAKjL,MAAO,CACRE,OAAQ,OAAQ0E,QAAS,OACzBsG,cAAe,SAAUC,WAAY,SACrCtG,eAAgB,SAAUkD,SAAS,SAEpC,6CAAkB,kBAAC,IAAD,CAAM/J,KAAK,a,UCmEzBoN,OArEf,YAA0C,IAApBpJ,EAAmB,EAAnBA,gBAClB,EAA4BtB,mBAAS,IAArC,mBAAOnB,EAAP,KAAe8L,EAAf,KACM7L,EAA2B,0BAApBC,SAASC,OAAqC,wBAA0BD,SAASC,OA6B9F,OACI,yBAAKM,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,kBAC3C,kBAAC,KAAD,CAAUyG,OA7BE,SAAAC,GAChB,IAAIC,EAAW,IAAIC,SAInBD,EAASE,OAAO,OAAQH,EAAM,IAE9BrN,IAAMiF,KAAK,qBAAsBqI,EALlB,CACX1K,OAAQ,CAAE,eAAgB,yBAKzB1C,MAAK,SAAAC,GACEA,EAASC,KAAK8E,SACdiI,EAAU,GAAD,mBAAK9L,GAAL,CAAalB,EAASC,KAAKqN,YACpC3J,EAAgB,GAAD,mBAAKzC,GAAL,CAAalB,EAASC,KAAKqN,aAE1CpI,MAAM,iGAiBT,gBAAGqI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,iCACI,uCACI7L,MAAO,CACHC,MAAO,IACPC,OAAQ,IACR8H,OAAQ,sBACRpD,QAAS,OACTuG,WAAY,SACZtG,eAAgB,WAEhB+G,KAEJ,0BAAWC,KACX,kBAAC,IAAD,CAAM7N,KAAK,OAAOgC,MAAO,CAAE+H,SAAU,eAMrD,yBAAK/H,MAAO,CAAE4E,QAAS,OAAQ3E,MAAO,QAASC,OAAQ,QAAS4L,SAAU,SACrEvM,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACR,yBAAKC,IAAKD,EAAOkF,QAAS,kBAlCpB,SAAAnF,GAClB,IAAMoB,EAAe1B,EAAO2B,QAAQrB,GAEhCkM,EAAS,YAAOxM,GACpBwM,EAAU3K,OAAOH,EAAc,GAC/BoK,EAAUU,GACV/J,EAAgB+J,GA4B4BC,CAAcnM,KAC1C,yBACIG,MAAO,CAAEqI,SAAU,QAASpI,MAAO,QAASC,OAAQ,SACpDC,IAAG,UAAKX,EAAL,YAAaK,GAChBO,IAAI,YC/DxB6E,GAAUC,IAAVD,MACAgH,GAAanK,IAAbmK,SAEF5J,GAAa,CACf,CAAEtC,IAAK,EAAGgB,MAAO,UACjB,CAAEhB,IAAK,EAAGgB,MAAO,UACjB,CAAEhB,IAAK,EAAGgB,MAAO,QACjB,CAAEhB,IAAK,EAAGgB,MAAO,iBACjB,CAAEhB,IAAK,EAAGgB,MAAO,iBACjB,CAAEhB,IAAK,EAAGgB,MAAO,YAgFNmL,OA7Ef,SAA2BvN,GACvB,MAA0B+B,mBAAS,IAAnC,mBAAO6D,EAAP,KAAc4H,EAAd,KACA,EAAsCzL,mBAAS,IAA/C,mBAAO8D,EAAP,KAAoB4H,EAApB,KACA,EAA0B1L,mBAAS,IAAnC,mBAAO4B,EAAP,KAAc+J,EAAd,KACA,EAAiC3L,mBAAS,GAA1C,mBAAO4L,EAAP,KAAiBC,EAAjB,KACA,EAA4B7L,mBAAS,IAArC,mBAAOnB,EAAP,KAAe8L,EAAf,KAoCA,OACI,6BACI,yBAAKrL,MAAO,CAAEwM,SAAU,QAAS/H,OAAQ,cACrC,yBAAKzE,MAAO,CAAE0E,UAAW,SAAU6F,aAAc,SAC7C,kBAAC,GAAD,CAAO7C,MAAO,GAAd,iDAGJ,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAY1F,gBArCP,SAAA+J,GACjBV,EAAUU,MAsCE,6BACA,6BACA,+CACA,kBAAC,IAAD,CAAO/K,SA/CI,SAAAW,GAAC,OAAIwK,EAASxK,EAAES,cAAcrB,QA+CJA,MAAOwD,IAC5C,6BACA,6BACA,+CACA,kBAAC0H,GAAD,CAAUjL,SAlDO,SAAAW,GAAC,OAAIyK,EAAezK,EAAES,cAAcrB,QAkDPA,MAAOyD,IACrD,6BACA,6BACA,kDACA,kBAAC,IAAD,CAAOxG,KAAK,SAASgD,SArDV,SAAAW,GAAC,OAAI0K,EAAS1K,EAAES,cAAcrB,QAqDUA,MAAOuB,IAC1D,6BACA,6BACA,4BAAQtB,SAvDO,SAAAW,GAAC,OAAI4K,EAAa5K,EAAES,cAAcrB,QAuDPA,MAAOuL,GAC5CjK,GAAWzC,KAAI,SAAA6M,GAAI,OAAI,4BAAQ1M,IAAK0M,EAAK1M,IAAKgB,MAAO0L,EAAK1L,OAAQ0L,EAAK1L,WAE5E,6BACA,6BACA,kBAAC,IAAD,CAAQiE,QAtDF,SAAArD,GAGlB,GAFAA,EAAE+K,kBAEGnI,IAAUC,IAAgBlC,IAAUgK,IAAa/M,EAAQ,OAAOgE,MAAM,wEAE3E,IAAML,EAAO,CACTyJ,OAAQhO,EAAMC,KAAKoL,SAAS1I,IAC5BiD,QACAC,cACAlC,QACA/C,SACAqN,UAAWN,GAEfpO,IAAMiF,KAAK,eAAgBD,GACtB9E,MAAK,SAAAC,GACEA,EAASC,KAAK8E,SACdG,MAAM,8EACN5E,EAAMS,QAAQC,KAAK,MAGnBkE,MAAM,mFAkCN,oB,qBCvDLsJ,OA1Bf,SAAsBlO,GAClB,MAA4B+B,mBAAS,IAArC,mBAAOnB,EAAP,KAAe8L,EAAf,KACM7L,EAA2B,0BAApBC,SAASC,OAAqC,wBAA0BD,SAASC,OAiB9F,OAfAT,qBAAU,WACN,GAAIN,EAAMmO,OAAOvN,QAAUZ,EAAMmO,OAAOvN,OAAO6K,OAAS,EAAG,CACvD,IAAI7K,EAAS,GAEbZ,EAAMmO,OAAOvN,OAAOK,KAAI,SAAA6M,GACpBlN,EAAOF,KAAK,CACR0N,SAAS,GAAD,OAAKvN,EAAL,YAAaiN,GACrBO,UAAU,GAAD,OAAKxN,EAAL,YAAaiN,GACtBQ,MAAO,aAGf5B,EAAU9L,MAEf,CAACZ,EAAMmO,SAGN,6BACI,kBAAC,KAAD,CAAcI,MAAO3N,EAAQ4N,GAAC,M,WCM3BC,OA5Bf,SAAqBzO,GACjB,IAAMI,EAAWC,cAMjB,OACI,6BACI,kBAAC,KAAD,CAAcuF,MAAM,eAAe8I,UAAQ,GACvC,kBAAC,KAAa1F,KAAd,CAAmB4B,MAAM,SAAS5K,EAAMmO,OAAOxK,OAC/C,kBAAC,KAAaqF,KAAd,CAAmB4B,MAAM,QAAQ5K,EAAMmO,OAAOQ,MAC9C,kBAAC,KAAa3F,KAAd,CAAmB4B,MAAM,QAAQ5K,EAAMmO,OAAOS,MAC9C,kBAAC,KAAa5F,KAAd,CAAmB4B,MAAM,eAAe5K,EAAMmO,OAAOtI,cAGzD,6BACA,6BAEA,yBAAKxE,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,WAC3C,kBAAC,IAAD,CAAQ2I,KAAK,QAAQtH,MAAM,QAAQlI,KAAK,SAASgH,QAjBxC,WACjBjG,EnB4CD,SAAmBgI,GACtB,IAAI7D,EAAO,CACPuK,UAAW1G,GAMf,MAAO,CACH/I,KC1DmB,cD2DnBC,QALYC,IAAMiF,KAAN,UEzDO,aFyDP,cAAuCD,GAClD9E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SmBlDlBoP,CAAU/O,EAAMmO,OAAOxL,QAgBxB,kBCcDqM,OAhCf,SAAuBhP,GACnB,IAAM8O,EAAY9O,EAAMiP,MAAMC,OAAOJ,UACrC,EAA8B/M,mBAAS,IAAvC,mBAAOuD,EAAP,KAAgB6J,EAAhB,KAUA,OARA7O,qBAAU,WACNf,IAAMC,IAAN,yCAA4CsP,EAA5C,iBACKrP,MAAK,SAAAC,GACFyP,EAAWzP,EAASC,KAAK,OAE5B2I,OAAM,SAAAC,GAAG,OAAI3D,MAAM2D,QACzB,IAGC,yBAAKlH,MAAO,CAAEC,MAAO,OAAQgI,QAAS,cAClC,yBAAKjI,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,WAC3C,4BAAKZ,EAAQM,QAGjB,6BAEA,kBAAC,IAAD,CAAKI,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKT,GAAI,GAAIwE,GAAI,IACb,kBAAC,GAAD,CAAcoE,OAAQ7I,KAE1B,kBAAC,IAAD,CAAKC,GAAI,GAAIwE,GAAI,IACb,kBAAC,GAAD,CAAaoE,OAAQ7I,Q,QC4B1B8J,OArDf,SAAuBpP,GACnB,IAAMqP,EAAkB,SAAAzO,GACpB,IAAMC,EAA2B,0BAApBC,SAASC,OAAqC,wBAA0BD,SAASC,OAE9F,GAAIH,EAAO6K,OAAS,EAAG,CACnB,IAAIvK,EAAQN,EAAO,GACnB,MAAM,GAAN,OAAUC,EAAV,YAAkBK,KA2B1B,OACI,6BACI,+BACI,+BACI,4BACI,6CACA,gDACA,6CACA,kDAIR,+BAlCRlB,EAAMgE,UAAYhE,EAAMgE,SAAS/C,KAAI,SAAAqE,GAAO,OACxC,wBAAIlE,IAAKkE,EAAQ3C,KACb,4BACI,yBACItB,MAAO,CAAEC,MAAO,QAChBG,IAAI,UACJD,IAAK6N,EAAgB/J,EAAQ1E,WAGrC,4BACK0E,EAAQgK,UAEb,4BACKhK,EAAQ3B,OAEb,4BACI,kBAAC,IAAD,CAAQ0C,QAAS,kBAAMrG,EAAMqI,WAAW/C,EAAQ3C,OAAhD,mB,6DC/BC4M,G,+MACjBpP,MAAQ,CACJqP,QAAQ,G,6CAGZ,WAAU,IAAD,OA0BDC,EAAQC,KAAK1P,MAAMyP,MAcvB,OACI,6BAEQC,KAAKvP,MAAMqP,QACX,kBAAC,KAAD,CACIG,IArBN,UAsBMC,OAjBD,CACXC,QAAS,mFACTC,WAAY,0BAgBAC,SAtBD,MAuBCN,MAAOA,EACPO,QAhCA,SAACzH,GAEb0H,QAAQC,IAAI,SAAU3H,IA+BV4H,UAhDE,SAACC,GAEfH,QAAQC,IAAI,6BAA8BE,GAE1C,EAAKpQ,MAAMqQ,SAASD,GACpB,EAAKE,SAAS,CAAEd,QAAQ,KA4CZe,SAxCC,SAAC5Q,GAEdsQ,QAAQC,IAAI,6BAA8BvQ,IAuC9B0B,MAAO,CACHwN,KAAM,QACN3F,MAAO,OACP3B,MAAO,OACPqD,MAAO,mB,GA7DC4F,IAAMC,W,qBCoG3BC,OAhGf,SAAkB1Q,GACd,IAAMI,EAAWC,cACjB,EAA0B0B,mBAAS,GAAnC,mBAAO0N,EAAP,KAAckB,EAAd,KACA,EAAkC5O,oBAAS,GAA3C,mBAAO6O,EAAP,KAAkBC,EAAlB,KACA,EAAsC9O,oBAAS,GAA/C,mBAAO+O,EAAP,KAAoBC,EAApB,KAEAzQ,qBAAU,WACN,IAAI0Q,EAAY,GAEZhR,EAAMC,KAAKoL,UAAYrL,EAAMC,KAAKoL,SAASG,MACvCxL,EAAMC,KAAKoL,SAASG,KAAKC,OAAS,IAClCzL,EAAMC,KAAKoL,SAASG,KAAKyF,SAAQ,SAAAnD,GAC7BkD,EAAUtQ,KAAKoN,EAAK1F,OAGxBhI,EvB6CT,SAAsB4Q,EAAWE,GAuBpC,MAAO,CACH7R,KCtFsB,iBDuFtBC,QAxBYC,IAAMC,IAAN,yCAA4CwR,EAA5C,gBACXvR,MAAK,SAAAC,GAiBF,OAZAwR,EAASD,SAAQ,SAAAE,GAEbzR,EAASC,KAAKsR,SAAQ,SAACG,EAAejQ,GAE9BgQ,EAAS/I,KAAOgJ,EAAczO,MAC9BjD,EAASC,KAAKwB,GAAOmO,SAAW6B,EAAS7B,gBAO9C5P,EAASC,SuBhEH0R,CAAaL,EAAWhR,EAAMC,KAAKoL,SAASG,OAChD/L,MAAK,SAAAC,GACF4R,EAAe5R,EAASJ,eAIzC,CAACU,EAAMC,KAAKoL,WAEf,IAAMiG,EAAiB,SAAAC,GACnB,IAAI9B,EAAQ,EACZ8B,EAAWtQ,KAAI,SAAA6M,GACX2B,GAASrK,SAAS0I,EAAKnK,MAAO,IAAMmK,EAAKwB,YAE7CqB,EAASlB,GACToB,GAAa,IAyBjB,OACI,yBAAKxP,MAAO,CAAEC,MAAO,MAAOwE,OAAQ,cAChC,uCAEA,6BACI,kBAAC,GAAD,CACI9B,SAAUhE,EAAMC,KAAKsR,WACrBlJ,WA7BO,SAAAyG,GACnB1O,EvBwDD,SAAwB0O,GAa3B,MAAO,CACHzP,KCxGwB,mBDyGxBC,QAdYC,IAAMC,IAAN,wCAA2CsP,EAA3C,gBACXrP,MAAK,SAAAC,GAQF,OAPAA,EAASC,KAAK6L,KAAKyF,SAAQ,SAAAnD,GACvBpO,EAASC,KAAK4R,WAAWN,SAAQ,SAAC3L,EAASnE,GACnC2M,EAAK1F,KAAO9C,EAAQ3C,MACpBjD,EAASC,KAAK4R,WAAWpQ,GAAOmO,SAAWxB,EAAKwB,gBAIrD5P,EAASC,SuBlEX6R,CAAe1C,IACnBrP,MAAK,SAAAC,GACEA,EAASJ,QAAQiS,WAAW9F,QAAU,GACtCoF,GAAa,UAgCjBD,EACI,yBAAKvP,MAAO,CAAE+E,UAAW,SACrB,+CAAqBqJ,IAEvBqB,EACE,kBAAC,KAAD,CACIjF,OAAO,UACPjG,MAAM,iCAGV,oCACI,6BACA,6BACA,kBAAC,KAAD,CAAOC,aAAa,KAKhC+K,GACA,kBAAC,GAAD,CACInB,MAAOA,EACPY,SAhDW,SAAA1Q,GACvBS,EvBkED,SAAsBT,GAIzB,MAAO,CACHN,KCjHsB,iBDkHtBC,QALYC,IAAMiF,KAAN,wBAAoC7E,GAC/CF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SuBpElB8R,CAAa,CAClBC,YAAa/R,EACb4R,WAAYvR,EAAMC,KAAKsR,cAEtB9R,MAAK,SAAAC,GACEA,EAASJ,QAAQmF,UACjBoM,GAAa,GACbE,GAAe,Y,qBChBpBY,OArCf,SAAqB3R,GACjB,OACI,yBAAKqB,MAAO,CAAEC,MAAO,MAAOwE,OAAQ,cAChC,yBAAKzE,MAAO,CAAE0E,UAAW,WACrB,wCAIJ,6BAEA,+BACI,+BACI,4BACI,0CACA,qCACA,wCACA,kDAIR,+BAEQ/F,EAAMC,KAAKoL,UAAYrL,EAAMC,KAAKoL,SAAS5K,QAAQQ,KAAI,SAAC6M,EAAM3M,GAAP,OACnD,wBAAIC,IAAKD,GACL,4BAAK2M,EAAKlL,MACV,4BAAKkL,EAAKnK,OACV,4BAAKmK,EAAKwB,UACV,4BAAKsC,KAAM9D,EAAK+D,gBAAgBC,OAAO,gCCQxDC,OApBf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAW,4CACnB,kBAAC,GAAD,MACA,yBAAK3Q,MAAO,CAAE4Q,WAAY,OAAQC,UAAW,uBAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAK1O,EAAa,QACnD,kBAAC,IAAD,CAAOuO,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKnI,GAAc,KAC5D,kBAAC,IAAD,CAAOgI,OAAK,EAACC,KAAK,kBAAkBC,UAAWC,EAAK/E,IAAmB,KACvE,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,sBAAsBC,UAAWC,EAAKtD,IAAe,KACvE,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,aAAaC,UAAWC,EAAK5B,IAAU,KACzD,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,WAAWC,UAAWC,EAAKX,IAAa,OAG9D,kBAAC,GAAD,QCrBca,QACW,cAA7BvK,OAAOnH,SAAS2R,UAEe,UAA7BxK,OAAOnH,SAAS2R,UAEhBxK,OAAOnH,SAAS2R,SAASxD,MACvB,2D,wBCXSyD,GAJKC,aAAgB,CAChC1S,KCQW,WAA+B,IAArBE,EAAoB,uDAAZ,GAAIyS,EAAQ,uCACzC,OAAQA,EAAOvT,MACX,I3BbqB,gB2BcjB,OAAO,2BAAKc,GAAZ,IAAmB0S,SAAUD,EAAOtT,UACxC,I3BhBkB,a2BiBd,OAAO,2BAAKa,GAAZ,IAAmB2S,YAAaF,EAAOtT,UAC3C,I3BhBiB,Y2BiBb,OAAO,2BAAKa,GAAZ,IAAmBkL,SAAUuH,EAAOtT,UACxC,I3BjBmB,c2BkBf,OAAO,eAAKa,GAChB,I3BlBmB,c2BmBf,OAAO,2BACAA,GADP,IAEIkL,SAAS,2BACFlL,EAAMkL,UADL,IAEJG,KAAMoH,EAAOtT,YAGzB,I3BzBsB,iB2B0BlB,OAAO,2BAAKa,GAAZ,IAAmBoR,WAAYqB,EAAOtT,UAC1C,I3B1BwB,mB2BmCxB,I3BlCsB,iB2BmClB,OAAO,2BACAa,GADP,IAEIoR,WAAYqB,EAAOtT,QAAQiS,WAC3BlG,SAAS,2BACFlL,EAAMkL,UADL,IAEJG,KAAMoH,EAAOtT,QAAQkM,SAGjC,QACI,OAAOrL,M,+BClCb4S,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAASC,OACL,kBAAC,IAAD,CACIC,MAAOP,GACHQ,GACAtL,OAAOuL,8BACPvL,OAAOuL,iCAGX,kBAAC,KAAD,KACI,kBAAC,GAAD,QAGNC,SAASC,eAAe,SHkGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpU,MAAK,SAAAqU,GACjCA,EAAaC,iB","file":"static/js/main.33ee21b4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMOVE_CART_ITEM,\r\n    ON_SUCCESS_BUY\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addToCart(id) {\r\n    let body = {\r\n        productId: id\r\n    }\r\n\r\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getCartItems(cartItems, userCart) {\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n            // cartItem들에 해당하는 정보들을\r\n            // Product Collection에서 가져온 후에\r\n            // Quantity 정보를 넣어준다\r\n\r\n            userCart.forEach(cartItem => {\r\n\r\n                response.data.forEach((prodcutDetail, index) => {\r\n\r\n                    if (cartItem.id === prodcutDetail._id) {\r\n                        response.data[index].quantity = cartItem.quantity\r\n                    }\r\n\r\n                })\r\n\r\n            })\r\n\r\n            return response.data;\r\n\r\n        });\r\n\r\n    return {\r\n        type: GET_CART_ITEMS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function removeCartItem(productId) {\r\n    const request = axios.get(`/api/users/removeFromCart?_id=${productId}&type=array`)\r\n        .then(response => {\r\n            response.data.cart.forEach(item => {\r\n                response.data.cartDetail.forEach((product, index) => {\r\n                    if (item.id === product._id) {\r\n                        response.data.cartDetail[index].quantity = item.quantity\r\n                    }\r\n                })\r\n            })\r\n            return response.data\r\n        })\r\n\r\n    return {\r\n        type: REMOVE_CART_ITEM,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function onSuccessBuy(data) {\r\n    const request = axios.post(`/api/users/successBuy`, data)\r\n        .then(response => response.data)\r\n\r\n    return {\r\n        type: ON_SUCCESS_BUY,\r\n        payload: request\r\n    }\r\n}","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\nexport const ADD_TO_CART = 'add_to_cart';\r\nexport const GET_CART_ITEMS = 'get_cart_items';\r\nexport const REMOVE_CART_ITEM = 'remove_cart_item';\r\nexport const ON_SUCCESS_BUY = 'on_success_buy';","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","/* global location */\r\n/* eslint no-restricted-globals: [\"off\"] */\r\n\r\nimport React from 'react'\r\nimport { Carousel } from 'antd'\r\n\r\nfunction ImageSlider({ images }) {\r\n    const host = location.origin === \"http://localhost:3000\" ? \"http://localhost:5000\" : location.origin;\r\n\r\n    return (\r\n        <div>\r\n            <Carousel autoplay>\r\n                {images.map((image, index) => (\r\n                    < div key={index}>\r\n                        <img\r\n                            style={{ width: '100%', height: '18vw' }}\r\n                            src={`${host}/${image}`}\r\n                            alt={image}\r\n                        />\r\n                    </div>\r\n                ))\r\n                }\r\n            </Carousel >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Checkbox } from 'antd'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox({ list, handleFielters }) {\r\n    const [checked, setChecked] = useState([])\r\n\r\n    const handleToggle = value => {\r\n        const currentIndex = checked.indexOf(value)\r\n        const newChecked = [...checked]\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked)\r\n        handleFielters(newChecked)\r\n    }\r\n\r\n    const renderCheckboxLists = () => list && list.map((value, index) => (\r\n        <Checkbox\r\n            onChange={() => handleToggle(value._id)}\r\n            checked={checked.indexOf(value._id) === -1 ? false : true}\r\n            key={index}\r\n        >\r\n            <span>{value.name}</span>\r\n        </Checkbox>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"Continents\" key=\"1\">\r\n                    {renderCheckboxLists()}\r\n                </Panel>\r\n            </Collapse>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Radio } from 'antd'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction RadioBox({ list, handleFielters }) {\r\n    const [value, setValue] = useState(0)\r\n\r\n    const renderRadioboxLists = () => list && list.map(value => (\r\n        <Radio value={value._id} key={value._id}>\r\n            <span>{value.name}</span>\r\n        </Radio>\r\n    ))\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n        handleFielters(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"Price\" key=\"1\">\r\n                    <Radio.Group onChange={handleChange} value={value} >\r\n                        {renderRadioboxLists()}\r\n                    </Radio.Group>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { useState } from 'react'\r\nimport { Input } from 'antd'\r\n\r\nconst { Search } = Input\r\n\r\nfunction SearchFeature({ refreshFunction }) {\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const searchHandler = e => {\r\n        setSearchTerm(e.currentTarget.value)\r\n        refreshFunction(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder='input search text'\r\n                onChange={searchHandler}\r\n                style={{ width: 200 }}\r\n                value={searchTerm}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","const continents = [\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"Africa\",\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"Europe\",\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"Asia\",\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"North America\",\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"South America\",\r\n    },\r\n    {\r\n        \"_id\": 6,\r\n        \"name\": \"Oceania\",\r\n    },\r\n]\r\n\r\nconst price = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"any\",\r\n        \"array\": []\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"$0 to $199\",\r\n        \"array\": [0, 199]\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"$200 to $249\",\r\n        \"array\": [200, 249]\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"$250 to $279\",\r\n        \"array\": [250, 279]\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"$280 to $299\",\r\n        \"array\": [280, 299]\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"More than $300\",\r\n        \"array\": [300, 1500000]\r\n    },\r\n]\r\n\r\nexport {\r\n    continents, price\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Icon, Col, Card, Row, Button } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport ImageSlider from '../../utils/ImageSlider'\r\nimport CheckBox from './Sections/CheckBox'\r\nimport RadioBox from './Sections/RadioBox'\r\nimport SearchFeature from './Sections/SearchFeature'\r\nimport { continents, price } from './Sections/Datas'\r\n\r\nfunction LandingPage() {\r\n    useEffect(() => {\r\n        let body = {\r\n            skip,\r\n            limit\r\n        }\r\n        getProduct(body)\r\n    }, [])\r\n\r\n\r\n    // state\r\n    const [products, setProducts] = useState([])\r\n    const [skip, setSkip] = useState(0)\r\n    const [limit, setLimit] = useState(8)\r\n    const [postSize, setPostSize] = useState(0)\r\n    const [filters, setFilters] = useState({\r\n        continents: [],\r\n        price: []\r\n    })\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n\r\n\r\n    // call API\r\n    const getProduct = body => {\r\n        axios.post('/api/product/products', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    if (body.loadMore) {\r\n                        setProducts([...products, ...response.data.productInfo])\r\n                    } else {\r\n                        setProducts(response.data.productInfo)\r\n                    }\r\n                    setPostSize(response.data.postSize)\r\n                } else {\r\n                    alert(\"상품들을 가져오는데 실패 했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const loadMoreHandler = () => {\r\n        let body = {\r\n            skip: skip + limit, // 최초 0 + 8, 두번째 8 + 8, 세번째 16 + 8\r\n            limit,\r\n            loadMore: true // 더보기 버튼을 눌렀다는 정보\r\n        }\r\n        getProduct(body)\r\n        setSkip(skip)\r\n    }\r\n\r\n\r\n\r\n    // filters\r\n    const handleFielters = (paramFilters, category) => {\r\n        const newFilters = { ...filters }\r\n        newFilters[category] = paramFilters\r\n\r\n        if (category === \"price\") {\r\n            let priceValues = handlePrice(paramFilters)\r\n            newFilters[category] = priceValues\r\n        }\r\n\r\n        showFilteredResults(newFilters)\r\n        setFilters(newFilters)\r\n    }\r\n\r\n    const showFilteredResults = filters => {\r\n        let body = {\r\n            skip: 0, // 아무것도 가져오지 않음\r\n            limit,\r\n            filters\r\n        }\r\n        getProduct(body)\r\n        setSkip(0)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = price\r\n        let array = []\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value, 10)) {\r\n                array = data[key].array\r\n            }\r\n        }\r\n        return array\r\n    }\r\n\r\n\r\n    // search\r\n    const updateSearchTerm = newSearchTerm => {\r\n        let body = {\r\n            skip: 0,\r\n            limit,\r\n            filters,\r\n            searchTerm: newSearchTerm\r\n        }\r\n\r\n        setSearchTerm(newSearchTerm)\r\n        getProduct(body)\r\n        setSkip(0)\r\n    }\r\n\r\n\r\n\r\n    // render\r\n    const renderCards = products.map((product, index) => {\r\n        return (\r\n            <Col lg={6} md={8} xs={24} key={index}>\r\n                <Card\r\n                    cover={\r\n                        <a href={`/product/${product._id}`}>\r\n                            <ImageSlider images={product.images} />\r\n                        </a>\r\n                    }\r\n                >\r\n                    <Meta\r\n                        title={product.title}\r\n                        description={`$${product.price}`}\r\n                    />\r\n                </Card>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ width: '75%', margin: '3rem auto' }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h2>Let's Travel Anywhere <Icon type='rocket' /></h2>\r\n            </div>\r\n\r\n\r\n            {/* filter */}\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={12} xs={24}>\r\n                    <CheckBox\r\n                        list={continents}\r\n                        handleFielters={filters => handleFielters(filters, \"continents\")}\r\n                    />\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                    <RadioBox\r\n                        list={price}\r\n                        handleFielters={filters => handleFielters(filters, \"price\")}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            {/* search */}\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '1rem 0' }}>\r\n                <SearchFeature refreshFunction={updateSearchTerm} />\r\n            </div>\r\n\r\n\r\n            {/* cards */}\r\n            <Row gutter={[16, 16]}>\r\n                {renderCards}\r\n            </Row>\r\n\r\n\r\n            {/* 더보기 버튼 */}\r\n            {postSize >= limit &&\r\n                <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\r\n                    <Button onClick={loadMoreHandler}>더보기</Button>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <SubMenu title={<span>Blogs</span>}>\r\n      <MenuItemGroup title=\"Item 1\">\r\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n      </MenuItemGroup>\r\n      <MenuItemGroup title=\"Item 2\">\r\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu, Icon, Badge } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"history\">\r\n          <a href=\"/history\">History</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"upload\">\r\n          <a href=\"/product/upload\">Upload</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"cart\" style={{ paddingBottom: 3 }}>\r\n          <Badge count={user.userData && user.userData.cart.length}>\r\n            <a href=\"/user/cart\" style={{ marginRight: -22, cikir: '#667777' }}>\r\n              <Icon type=\"shopping-cart\" style={{ fontSize: 30, marginBottom: 3 }}></Icon>\r\n            </a>\r\n          </Badge>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Logo</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","/* global location */\r\n/* eslint no-restricted-globals: [\"off\"] */\r\n\r\nimport React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Icon } from 'antd'\r\nimport axios from 'axios'\r\n\r\nfunction FileUpload({ refreshFunction }) {\r\n    const [images, setImages] = useState([])\r\n    const host = location.origin === \"http://localhost:3000\" ? \"http://localhost:5000\" : location.origin;\r\n\r\n    const dropHandler = files => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...images, response.data.filePath])\r\n                    refreshFunction([...images, response.data.filePath])\r\n                } else {\r\n                    alert(\"파일을 저장하는데 실패했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const deleteHandler = image => {\r\n        const currentIndex = images.indexOf(image);\r\n\r\n        let newImages = [...images];\r\n        newImages.splice(currentIndex, 1); // 시작점, 갯수\r\n        setImages(newImages)\r\n        refreshFunction(newImages)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                        <div\r\n                            style={{\r\n                                width: 300,\r\n                                height: 240,\r\n                                border: '1px solid lightgray',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}\r\n                            {...getRootProps()}\r\n                        >\r\n                            <input {...getInputProps()} />\r\n                            <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflow: 'auto' }}>\r\n                {images.map((image, index) => (\r\n                    <div key={index} onClick={() => deleteHandler(image)}>\r\n                        <img\r\n                            style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`${host}/${image}`}\r\n                            alt=''\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd'\r\nimport axios from 'axios'\r\nimport FileUpload from '../../utils/FileUpload'\r\n\r\nconst { Title } = Typography\r\nconst { TextArea } = Input\r\n\r\nconst continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Oceania\" }\r\n]\r\n\r\nfunction UploadProductPage(props) {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [continet, setContinent] = useState(1)\r\n    const [images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = e => setTitle(e.currentTarget.value)\r\n    const descriptionChangeHandler = e => setDescription(e.currentTarget.value)\r\n    const priceChangeHandler = e => setPrice(e.currentTarget.value)\r\n    const continentChangeHandler = e => setContinent(e.currentTarget.value)\r\n\r\n    const updateImages = newImages => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (!title || !description || !price || !continet || !images) return alert(\"모든 정보를 입력해주세요\")\r\n\r\n        const body = {\r\n            writer: props.user.userData._id,\r\n            title,\r\n            description,\r\n            price,\r\n            images,\r\n            continets: continet\r\n        }\r\n        axios.post(\"/api/product\", body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert(\"상품 업로드에 성공했습니다\")\r\n                    props.history.push('/')\r\n\r\n                } else {\r\n                    alert(\"상품 업로드에 실패했습니다\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n                <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                    <Title level={2}>여행 상품 업로드</Title>\r\n                </div>\r\n\r\n                <Form>\r\n                    <FileUpload refreshFunction={updateImages} />\r\n\r\n                    <br />\r\n                    <br />\r\n                    <label>이름</label>\r\n                    <Input onChange={titleChangeHandler} value={title} />\r\n                    <br />\r\n                    <br />\r\n                    <label>설명</label>\r\n                    <TextArea onChange={descriptionChangeHandler} value={description} />\r\n                    <br />\r\n                    <br />\r\n                    <label>가격($)</label>\r\n                    <Input type=\"number\" onChange={priceChangeHandler} value={price} />\r\n                    <br />\r\n                    <br />\r\n                    <select onChange={continentChangeHandler} value={continet}>\r\n                        {continents.map(item => <option key={item.key} value={item.value}>{item.value}</option>)}\r\n                    </select>\r\n                    <br />\r\n                    <br />\r\n                    <Button onClick={submitHandler}>확인</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductPage","/* global location */\r\n/* eslint no-restricted-globals: [\"off\"] */\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport ImageGallery from 'react-image-gallery'\r\n\r\nfunction ProductImage(props) {\r\n    const [images, setImages] = useState([])\r\n    const host = location.origin === \"http://localhost:3000\" ? \"http://localhost:5000\" : location.origin;\r\n\r\n    useEffect(() => {\r\n        if (props.detail.images && props.detail.images.length > 0) {\r\n            let images = []\r\n\r\n            props.detail.images.map(item => {\r\n                images.push({\r\n                    original: `${host}/${item}`,\r\n                    thumbnail: `${host}/${item}`,\r\n                    sizes: '100px'\r\n                })\r\n            })\r\n            setImages(images)\r\n        }\r\n    }, [props.detail])\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={images} s />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Descriptions, Button } from 'antd'\r\nimport { addToCart } from '../../../../_actions/user_actions'\r\n\r\nfunction ProductInfo(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch(addToCart(props.detail._id));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"Product Info\" bordered>\r\n                <Descriptions.Item label=\"Price\">{props.detail.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Sold\">{props.detail.sold}</Descriptions.Item>\r\n                <Descriptions.Item label=\"View\">{props.detail.view}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Description\">{props.detail.description}</Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size='large' shape='round' type='danger' onClick={clickHandler}>\r\n                    Add to Cart\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Row, Col } from 'antd'\r\nimport ProductImage from './Sections/ProductImage'\r\nimport ProductInfo from './Sections/ProductInfo'\r\n\r\n\r\nfunction DetailProduct(props) {\r\n    const productId = props.match.params.productId\r\n    const [product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0])\r\n            })\r\n            .catch(err => alert(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{product.title}</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={12} sm={24}>\r\n                    <ProductImage detail={product} />\r\n                </Col>\r\n                <Col lg={12} sm={24}>\r\n                    <ProductInfo detail={product} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProduct\r\n","/* global location */\r\n/* eslint no-restricted-globals: [\"off\"] */\r\n\r\nimport React from 'react'\r\nimport './UserCardBlock.css'\r\nimport { Button } from 'antd'\r\n\r\nfunction UserCardBlock(props) {\r\n    const renderCartImage = images => {\r\n        const host = location.origin === \"http://localhost:3000\" ? \"http://localhost:5000\" : location.origin;\r\n\r\n        if (images.length > 0) {\r\n            let image = images[0];\r\n            return `${host}/${image}`\r\n        }\r\n    }\r\n\r\n    const renderItems = () => (\r\n        props.products && props.products.map(product => (\r\n            <tr key={product._id}>\r\n                <td>\r\n                    <img\r\n                        style={{ width: '70px' }}\r\n                        alt='product'\r\n                        src={renderCartImage(product.images)}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    {product.quantity}\r\n                </td>\r\n                <td>\r\n                    {product.price}\r\n                </td>\r\n                <td>\r\n                    <Button onClick={() => props.removeItem(product._id)}>remove</Button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product Image</th>\r\n                        <th>Product Quantity</th>\r\n                        <th>Product Price</th>\r\n                        <th>Remove form Cart</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class Paypal extends React.Component {\r\n    state = {\r\n        finish: true\r\n    }\r\n\r\n    render() {\r\n\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            console.log(\"The payment was succeeded!\", payment);\r\n\r\n            this.props.onSucess(payment)\r\n            this.setState({ finish: false })\r\n            // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n        const client = {\r\n            sandbox: 'AVvxhFmh8SKygdIyRaN0Th-E9sqZXrt4-8tGcai-MLTEX5BEZtjU7yhEP0c4y4-knsx_fIxc3u8zGERM',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.finish &&\r\n                    <PaypalExpressBtn\r\n                        env={env}\r\n                        client={client}\r\n                        currency={currency}\r\n                        total={total}\r\n                        onError={onError}\r\n                        onSuccess={onSuccess}\r\n                        onCancel={onCancel}\r\n                        style={{\r\n                            size: 'large',\r\n                            color: 'blue',\r\n                            shape: 'rect',\r\n                            label: 'checkout'\r\n                        }}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions'\r\nimport UserCardBlock from './Sections/UserCardBlock'\r\nimport Paypal from '../../utils/Paypal'\r\nimport { Empty, Result } from 'antd'\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch()\r\n    const [total, setTotal] = useState(0)\r\n    const [showTotal, setShowTotal] = useState(false)\r\n    const [showSuccess, setShowSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let cartItems = []\r\n\r\n        if (props.user.userData && props.user.userData.cart) {\r\n            if (props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                })\r\n\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                    .then(response => {\r\n                        calculateTotal(response.payload)\r\n                    })\r\n            }\r\n        }\r\n    }, [props.user.userData])\r\n\r\n    const calculateTotal = cartDetail => {\r\n        let total = 0;\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        })\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n    }\r\n\r\n    const removeFromCart = productId => {\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n                if (response.payload.cartDetail.length <= 0) {\r\n                    setShowTotal(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const transactionSuccess = data => {\r\n        dispatch(onSuccessBuy({\r\n            paymentData: data,\r\n            cartDetail: props.user.cartDetail\r\n        }))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    setShowTotal(false)\r\n                    setShowSuccess(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>My Cart</h1>\r\n\r\n            <div>\r\n                <UserCardBlock\r\n                    products={props.user.cartDetail}\r\n                    removeItem={removeFromCart}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n            {\r\n                showTotal ?\r\n                    <div style={{ marginTop: '3rem' }}>\r\n                        <h2>Total Amount : ${total}</h2>\r\n                    </div>\r\n                    : showSuccess ?\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Successfully Purchased Items\"\r\n                        />\r\n                        :\r\n                        <>\r\n                            <br />\r\n                            <br />\r\n                            <Empty description={false} />\r\n                        </>\r\n            }\r\n\r\n            {\r\n                showTotal &&\r\n                <Paypal\r\n                    total={total}\r\n                    onSucess={transactionSuccess}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React from 'react';\r\nimport dayjs from 'dayjs'\r\n\r\nfunction HistoryPage(props) {\r\n    return (\r\n        <div style={{ width: '80%', margin: '3rem auto' }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h1>History</h1>\r\n            </div>\r\n\r\n\r\n            <br />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Payment Id</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Date of Purchase</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        props.user.userData && props.user.userData.history.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{dayjs(item.dateOfPurchase).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport UploadProductPage from './views/UploadProductPage/UploadProductPage';\r\nimport DetailProduct from './views/DetailProductPage.js/DetailProduct';\r\nimport CartPage from './views/CartPage/CartPage';\r\nimport HistoryPage from './views/HistoryPage/HistoryPage';\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\r\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProduct, true)} />\r\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\r\n          <Route exact path=\"/history\" component={Auth(HistoryPage, true)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMOVE_CART_ITEM,\r\n    ON_SUCCESS_BUY\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return { ...state }\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload\r\n                }\r\n            }\r\n        case GET_CART_ITEMS:\r\n            return { ...state, cartDetail: action.payload }\r\n        case REMOVE_CART_ITEM:\r\n            return {\r\n                ...state,\r\n                cartDetail: action.payload.cartDetail,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                }\r\n            }\r\n        case ON_SUCCESS_BUY:\r\n            return {\r\n                ...state,\r\n                cartDetail: action.payload.cartDetail,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}